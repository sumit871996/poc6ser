pipeline {
     agent any
     environment {
        dockerImage = ''
        registry = 'sumithpe/poc6ser'
        DOCKERHUB_CREDENTIALS = credentials('dockerhub_id')
        PATH = "$PATH:/root/.dotnet/tools"
    }
    stages {
    stage('Build'){
            steps{
                sh 'export PATH="$PATH:/root/.dotnet/tools"'
                sh 'printenv'
                sh 'whoami'
                sh 'cd /var/lib/jenkins/workspace/trial/'
                sh 'sudo dotnet sonarscanner begin /k:"poc6-ser" /d:sonar.host.url="http://35.225.86.148:9000"  /d:sonar.login="sqp_999cef012b0aaae1cd8a4b3def548f5eb365b351"'
                sh 'sudo dotnet build'
            }
         }
        stage('SonarQube analysis') {
//    def scannerHome = tool 'SonarScanner 4.0';
        steps{
         
        // If you have configured more than one global server connection, you can specify its name
//      sh "${scannerHome}/bin/sonar-scanner"
        sh 'sudo dotnet sonarscanner end /d:sonar.login="sqp_999cef012b0aaae1cd8a4b3def548f5eb365b351"'
    
        }
        }
    
    
stage('Build Docker Images') {
            steps {
                script {
                    echo registry
                    sh 'docker image build -t sumithpe/poc6ser .'
                }
            }
        }
stage('Upload to DockerHub'){
            steps {
                script {
                      
                        }
                }
            }

        stage('docker stop container') {
         steps {
            
         }
       }
       stage('Docker Run') {
        steps {
            script {
                
                }
            }
        }
    }
}
